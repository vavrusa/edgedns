# EdgeDNS configuration

[upstream]
# Type of upstream servers: "forwarder" or "authoritative" or "recursive"
type = "forwarder"

# Upstream servers
servers = ["8.8.8.8:53", "8.8.4.4:53"]

# Load balancing/failover strategy: "fallback", "uniform", "consistent" or "minload"
strategy = "uniform"

# Max duration with a majority of failures before marking a server as temporarily
# unresponsive. That value should be specificied in ms.
max_failure_duration = 2500


[cache]
# Max number of cached entries
max_items = 250000

# Minimum TTL - Records with a TTL shorter than that one will not trigger a
# cache refresh. Increasing that value increases the cache hit ratio,
# improves reliability and reduces the load on upstream servers, but zones
# changes will obviously require more time to be visible by clients.
min_ttl = 60

# Maximum TTL - Records with a TTL larger than that one will be refreshed no
# matter what. These usually come from misconfigured zones.
max_ttl = 86400


[network]
# Listen address (can be a single address, or an table of named listeners)

# For example, an additional TLS interface would be configured as:
#
# [[network.listen]]
# address = "0.0.0.0:53"
# internal = true
#
# [[network.listen]]
# address = "0.0.0.0:853"
# tls = ["cert.p1", "password"]

[webservice]
# Change to `true` in order to start the webservice
enabled = false

# Webservice address for Prometheus. Path will be /metrics
listen = "0.0.0.0:9090"


[global]
# User name to drop privileges to
# user = "_edgedns"

# Group to drop privileges to, if not the primary group of the user
# group = "_edgedns"

# Directory to chroot() into
# chroot = "/var/empty"

# Number of threads handling client queries received over UDP
# More than 1 is rarely required. Set to 0 to disable UDP.
threads_udp = 1

# Number of threads handling client queries received over TCP
# More than 1 is very rarely required. Set to 0 to disable TCP.
threads_tcp = 1

# Max number of clients using TCP
max_tcp_clients = 100

# Max number of clients waiting for a response
max_waiting_clients = 1000000

# Max number of inflight queries
max_active_queries = 100000

# Max number of clients waiting for a response to the same query
max_clients_waiting_for_query = 1000

# Max number of open upstream connections
max_upstream_connections = 1000

# Identity (optional) - Should be set to the name of the host
# identity = "hostname"

# Version (optional) - Should be set to the software name
version = "EdgeDNS"


[tracing]
# Enable tracing requests with OpenTracing.
enabled = false

# Zipkin reporter collector configuration (URL).
# reporter_url = "http://localhost:9411"

# Sampling rate for the reporter (0.0 - 1.0).
# A sampling rate of 0.01 samples 1% of the requests.
sampling_rate = 0.01

# Reporter verbosity. By default, the reporter reports only failed requests.
only_failures = false

[apps]
# Global settings for sandbox apps and the loader.

# The location where apps should be loaded.
# It will look for WASM files that are configured below.
# Supported schemes are:
#  * file - load apps from filesystem, the path is expected to be a local path, e.g. `/etc/edgedns/apps`
#  * memcache - load apps from a memcached instance, the URI accepts following query parameters:
#    * signing_key - (optional) base64 encoded key to verify app HMAC digests (if not present, all apps will be trusted)
#    * prefix - (optional) KV store prefix, e.g. if set to `/prefix`, then the manifest file would be at `/prefix/manifest`
# location = "file:/etc/edgedns/apps"
# location = "memcache:/tmp/memcache.sock?signing_key=bXlzZWNyZXRrZXk=&prefix=/prefix"

# Enabled app and its configuration.
#[apps.example]
